<div id="statisticsList">
    <div class="statistics-total">
        <table style="width: 100%">
            <tbody>
                <tr>
                    <td align="left">Посты: @ViewBag.PostStatistics</td>
                    <td align="center">Комментарии: @ViewBag.CommentStatistics</td>
                    <td align="right">Пользователи: @ViewBag.UserStatistics</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="statistics-items">
        <a href="blog" class="item">Блог</a>
        <a href="register" class="item">Регистрации</a>
        <a href="comments" class="item">Комментарии</a>
        <a href="post" class="item">Пост</a>
        <a href="category" class="item">Категория</a>
        <a href="tag" class="item">Тэг</a>     
    </div>
</div>

<div id="statistics" class="collapse">
    <div>
        <button type="button" class="btn btn-default statistics-return"><span class="ui-icon ui-icon-arrowreturnthick-1-w"></span></button>
    </div>
    <div class="date-search">
        <label for="from">From</label>
        <input type="text" id="from" name="from">
        <label for="to">to</label>
        <input type="text" id="to" name="to">
        <button type="button" id="statisticsSearch" class="btn btn-sm"><span class="ui-icon ui-icon-search"></span></button>
    </div>


    <div id="chart" style="height: 400px"></div>

    <div id="statisticsTable" class="">
        <div id="jpagerStatistics"></div>
        <table id="jqgStatistics"></table>
    </div>
</div>




<link href="~/Content/jquery.jqGrid/ui.jqgrid.css" rel="stylesheet" />

<style>
    /*#statisticsTable{
        float: left;
    }*/

    .statistics-items{
        text-align: center;
    }
    .statistics-items .item{
        display: inline-block;
        height: 200px;
        width: 200px;
        background-color: aliceblue;
        margin: 50px;
    }



    /*only horizontal lines*/
    #jqgStatistics .ui-jqgrid tr.ui-row-ltr td { 
        border-bottom-style: none; 
        border-right-style: none;
    }
    #jqgStatistics td { 
        border-bottom-style: none; 
        border-right-style: none;
    }
    #jqgStatistics .ui-widget-content{
        border: solid #b5b5b5;
        border-width: 1px 0;
    }

    /*remove table border*/
    #gbox_jqgStatistics{
        border: none;
    }

    /*highlight selected row*/
    #jqgStatistics .ui-state-highlight,#jqgStatistics .ui-widget-content .ui-state-highlight,#jqgStatistics .ui-widget-header .ui-state-highlight {
        border: solid #808080;
        border-width: 1px 0;
        background: #f1fbff;
        color: black;
    }
    /*height row*/
    #jqgStatistics .row-height {
        white-space: nowrap;
        height: 30px
    }

    /*pager*/
    .ui-jqgrid .ui-pg-input {
        height: 20px;
    }
    .ui-jqgrid .ui-jqgrid-pager {
        height: 26px;
    }
    /*левая часть pager - поиск*/
    #jqgStatistics_toppager_right .ui-paging-info{
        display: inline-block;
    }
    /*width левой части pager*/
    #jqgStatistics_toppager_left{
        width: 250px;
    }

    /*modal*/
    .lock {
        /* Скрываем скроллбары */
        overflow: hidden;
    }

    .modal {
        /* По умолчанию не показываем содержимое модальных окон */
        display: none;
    }

    .lock .modal {
        /* Показываем подложку (полупрозрачное затенение) при открытии модального окна */
        display: block;
        /* Саму подложку фиксируем и растягиваем на всё пространство */
        position: fixed;
        bottom: 0;
        left: 0;
        top: 0;
        right: 0;
        /* Если содержимое модального окна в подложку не влезает — показываем скроллбары */
        overflow: auto;
    }

    /*скрываем titlebar в диалоговом окне*/
    .noTitleBar .ui-dialog-titlebar {
        display: none;
    }

    /*width command height input*/
    #TblGrid_jqgStatistics input[type=text], #TblGrid_jqgStatistics textarea{
        width: 97%;
    }
    #TblGrid_jqgStatistics textarea {
        resize: none;
    }
    #TblGrid_jqgStatistics #Description{
        height: 100px;
    }


    /*скрываем button close в titlebar в диалоговом окне*/
    .noCloseBtnTitle .ui-dialog-titlebar .ui-dialog-titlebar-close {
        display: none;
    }

    .noCloseBtnTitle .ui-dialog-title {
        width: 100%;
    }

    .ui-dialog .ui-dialog-buttonpane {
        width: 100%;
    }
</style>



<script src="~/Scripts/jquery.jqGrid.min.js"></script>
<script src="~/Scripts/i18n/grid.locale-ru.js" type="text/javascript"></script>



<link href="~/Scripts/jqPlot/jquery.jqplot.min.css" rel="stylesheet" />
<script src="~/Scripts/jqPlot/jquery.jqplot.min.js"></script>
<script src="~/Scripts/jqPlot/plugins/jqplot.cursor.js"></script>
<script src="~/Scripts/jqPlot/plugins/jqplot.highlighter.js"></script>

<script src="~/Scripts/jqPlot/plugins/jqplot.canvasTextRenderer.min.js"></script>
<script src="~/Scripts/jqPlot/plugins/jqplot.canvasAxisLabelRenderer.min.js"></script>
<script src="~/Scripts/jqPlot/plugins/jqplot.canvasAxisTickRenderer.min.js"></script>
<script src="~/Scripts/jqPlot/plugins/jqplot.categoryAxisRenderer.min.js"></script>




<script type="text/javascript">

    // JQuery
    //*******************************************

    $(document).ready(function () {

        // Variable
        //*******************************************

        var API_URL = "/api/ApiStatistics/";
        var lineData = [];
        var statistics = "blog";
        var periodTick = 1;
        var start = new Date();
        var end = new Date();
        var parameters = { period: periodTick, startDate: start, endDate: end };

        // search
        $("#statisticsSearch").click(function () {
            RefreshGrid();
        });

        // select statistics
        $(".item").click(function (e) {
            e.preventDefault();
            statistics = $(this).attr("href");
            $("#from").datepicker("setDate", start);
            $("#to").datepicker("setDate", end);
            RefreshGrid();
            $("#statistics").removeClass("collapse");
            $("#statisticsList").addClass("collapse");
        });

        // back to list statistics
        $(".statistics-return").click(function (e) {
            e.preventDefault();
            $("#statistics").addClass("collapse");
            $("#statisticsList").removeClass("collapse");
        });


        // grid
        $("#jqgStatistics").jqGrid({
            hoverrows: false,
            toppager: true,
            viewrecords: true,
            height: 100,
            autowidth: false,
            width: 800,
            hidegrid: false,
            url: API_URL + statistics + "?period=" + periodTick + "&startDate=" + start.toUTCString() + "&endDate=" + end.toUTCString(),
            mtype: "GET",
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            serializeGridData: function (postData) { return JSON.stringify(postData); },
            colNames: ["Title", "Value"],
            colModel: [
                { name: "Title", index: "Title", edittype: "text", width: 150, sortable: false },
                { name: "Value", index: "Value", edittype: "text", width: 70, sortable: true },
            ],
            rowNum: 10,
            rowList: [10, 20, 30],
            pager: "#jpagerStatistics",
            loadonce: true,
        });

        $("#jqgStatistics").jqGrid('navGrid', '#jpagerStatistics', {
            cloneToTop: true,
            search: false,
            refresh: false,
            add: false,
            del: false,
            edit: false,
            view: false
        });

        // remove bottom pager
        $("div#jpagerStatistics")[0].remove();



        // datepicker
        $("#from").datepicker({
            firstDay: 1,
            defaultDate: "-1w",
            changeMonth: true,
            numberOfMonths: 1,
            dateFormat: "dd.mm.yy",
            showAnim: "slideDown",
            onClose: function (selectedDate) {
                $("#to").datepicker("option", "minDate", selectedDate);
            }
        });
        $("#to").datepicker({
            firstDay: 1,
            changeMonth: true,
            numberOfMonths: 1,
            dateFormat: "dd.mm.yy",
            showAnim: "slideDown",
            onClose: function (selectedDate) {
                $("#from").datepicker("option", "maxDate", selectedDate);
            }
        });

        // convert date
        Date.prototype.toJSONLocal = (function () {
            function addZ(n) {
                return (n < 10 ? '0' : '') + n;
            }
            return function () {
                return this.getFullYear() + '-' +
                       addZ(this.getMonth() + 1) + '-' +
                       addZ(this.getDate());
            };
        }());

        function drawChart(line) {
            $("#chart").empty();
            $.jqplot("chart", [line], {
                series: [{
                    label: "line",
                    highlighter: { formatString: "<div><div style='text-align:left;'>%s</div><div style='text-align:right; font-size: 12pt;'>%s<div></div>" }
                }],
                axesDefaults: {
                    pad: 0,
                },
                axes: {
                    yaxis: {
                        rendererOptions: { forceTickAt0: true },
                    },
                    xaxis: {
                        renderer: $.jqplot.CategoryAxisRenderer,
                        labelRenderer: $.jqplot.CanvasAxisLabelRenderer,
                        tickRenderer: $.jqplot.CanvasAxisTickRenderer,
                        tickOptions: {
                            angle: -30,
                            fontSize: '9pt',
                            formatter: showLableFormatter
                        }
                    }
                },
                highlighter: {
                    show: true,
                    sizeAdjust: 8,
                },
                cursor: {
                    show: false
                }
            });
        };

        // formatter char lable data to highlighter
        var showLableFormatter = function (formatString, value) {
            var array_index = parseInt(value) || -1;
            if (array_index >= 0 && array_index <= lineData.length) {
                return lineData[array_index - 1][0];
            } else {
                return $.jqplot.DefaultTickFormatter(formatString, value);
            }
        };



        // refresh grid and chart
        function RefreshGrid(){
            start = $("#from").datepicker("getDate").toJSONLocal();
            end = $("#to").datepicker("getDate").toJSONLocal();
            parameters = { period: periodTick, startDate: start, endDate: end };
            $.ajax({
                url: API_URL + statistics,
                type: "GET",
                cache: false,
                data: parameters,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (result) {
                    alert(JSON.stringify(result));
                    $("#jqgStatistics").jqGrid("clearGridData")
                    .jqGrid("setGridParam", { data: result, search: true })
                    .trigger("reloadGrid", [{ page: 1, current: true }]);
                    $("#statisticsTable").removeClass("collapse");
                    // chart
                    var lineArray = [];
                    $.each(result, function (key, value) {
                        lineArray.push([value.Title, value.Value]);
                    });        
                    drawChart(lineArray);
                    lineData = lineArray;
                },
                error: function (x, y, z) {
                    alert(x + '\n' + y + '\n' + z);
                }
            });
        };

        


    });
    // End JQuery
    //*************************************************



    // Functions
    //*******************************************

    //// refresh jqGrid
    //function RefreshGrid() {
    //    $.ajax({
    //        url: API_URL + "ispublished/" + postsIsPublished,
    //        type: "GET",
    //        contentType: "application/json; charset=utf-8",
    //        datatype: "json",
    //        success: function (data) {
    //            $("#jqgPosts").jqGrid("clearGridData")
    //            .jqGrid("setGridParam", { data: data, search: true })
    //            .trigger("reloadGrid", [{ page: 1, current: true }]);
    //        },
    //        error: function (x, y, z) {
    //            alert(x + '\n' + y + '\n' + z);
    //        }
    //    });
    //};




</script>